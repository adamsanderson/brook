import{R as r,P as n,j as e,c as t,o as a,s as d,i as c,a as l,b as p}from"../../store.js";import{O as h,E as m,P as u}from"../../ProxyStoreProvider.js";const x={sidebar:"Clicking the Brook toolbar icon will show your feeds in the sidebar.",popup:"Feeds will appear in a popup when you click the Brook toolbar icon."};class w extends r.Component{static propTypes={viewMode:n.string.isRequired,setViewMode:n.func.isRequired};render(){const{viewMode:o}=this.props;return e.jsxs(r.Fragment,{children:[e.jsx("h4",{children:"View Options"}),e.jsxs("div",{className:"layout-column-aligned Form",children:[e.jsx("label",{htmlFor:"brook-view-option",children:"View feeds in"}),e.jsxs("div",{children:[e.jsx("div",{className:"Form-control",children:e.jsxs("select",{id:"brook-view-option",onChange:this.handleViewMode,value:o,children:[e.jsx("option",{value:"sidebar",children:"Sidebar"}),e.jsx("option",{value:"popup",children:"Popup"})]})}),e.jsx("div",{className:"Form-hint",children:x[o]})]})]}),e.jsx(h,{className:"layout-trailing"})]})}handleViewMode=o=>{const i=o.target.value;this.props.setViewMode(i),i==="sidebar"?browser.sidebarAction.open():browser.sidebarAction.close()}}const j=s=>({viewMode:a.selectors.getViewMode(s)}),b=t(j,{setViewMode:d})(w);class v extends r.Component{render(){return e.jsx(m,{message:"An error ocurred.",children:e.jsx(b,{})})}}c();const M=l();p.render(e.jsx(u,{store:M,children:e.jsx("div",{children:e.jsx(v,{})})}),document.body);
